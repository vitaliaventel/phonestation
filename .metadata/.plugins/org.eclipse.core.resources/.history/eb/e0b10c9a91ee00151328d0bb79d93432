package finalproject.model;

import java.io.Serializable;
import java.util.ArrayList;

public class Subscriber extends Person implements Serializable, Cloneable, Comparable {

	private int id;
	private String phoneNumber;
	private int balance;
	private ArrayList<String> services;
	private boolean status;
	private int monthDonate;
	private static final int PRICE = 13;

	public Subscriber(int id, String phoneNumber, ArrayList<String> services, boolean status) {
		this.id = id;
		firstName = "none";
		lastName = "none";
		this.phoneNumber = phoneNumber;
		this.services = services;
		this.status = status;
		balance = 0;
	}

	public Subscriber(String phoneNumber, ArrayList<String> services, boolean status) {
		firstName = "none";
		lastName = "none";
		this.phoneNumber = phoneNumber;
		this.services = services;
		this.status = status;
		balance = 0;
	}

	public Subscriber(String firstName, String lastName, String phoneNumber) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.phoneNumber = phoneNumber;
		balance = 0;
		status = true;
	}

	public Subscriber(String firstName, String lastName, String phoneNumber, ArrayList<String> services, boolean status,
			int balance, int id) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.phoneNumber = phoneNumber;
		this.services = services;
		this.status = status;
		this.balance = balance;
		this.id = id;
		monthDonate = PRICE * services.size();
	}

	public boolean isStatus() {
		return status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	public int getMonthDonate() {
		return monthDonate;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	public void setBalance(int balance) {
		this.balance = balance;
	}

	public void setServices(ArrayList<String> services) {
		this.services = new ArrayList<String>();
		this.services = services;
	}

	public void setId(int id) {
		this.id = id;
	}

	public int getId() {
		return id;
	}

	public String getPhoneNumber() {
		return phoneNumber;
	}

	public int getBalance() {
		return balance;
	}

	public ArrayList<String> getServices() {
		return services;
	}

	public void pay(int money) {
		balance += money;
	}

	public void changeNumber(String number) {
		phoneNumber = number;
	}

	public boolean cancelServices() {
		return true;
	}
	
	@Override
	public int compareTo(Object obj) {
		Subscriber entry = (Subscriber)obj;
		 int result = lastName.compareTo(entry.lastName);
         if(result != 0) {
                return result;
         }
         result = firstName.compareTo(entry.firstName);
         if(result != 0) {
                return result;
         }
		return 0;
	}

	@Override
	public String toString() {
		return "Subscriber [id = " +  id + "\n" +
				"First name = " + firstName + "\n" +
				"Last name = " + lastName + "\n" +
				"phoneNumber = " + phoneNumber + "\n" +
				"score = " + balance + "\n" +
				"services = " + services+ "\n" +
				 "status = " + status + "]" + "\n" +
				"*************************************************";
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Subscriber other = (Subscriber) obj;
		if (id != other.id)
			return false;
		if (phoneNumber == null) {
			if (other.phoneNumber != null)
				return false;
		} else if (!phoneNumber.equals(other.phoneNumber))
			return false;
		if (balance != other.balance)
			return false;
		if (services == null) {
			if (other.services != null)
				return false;
		} else if (!services.equals(other.services))
			return false;
		if (status != other.status)
			return false;
		return true;
	}
	
	@Override
	public Object clone(){
		try{
			return super.clone();
		} catch(CloneNotSupportedException e){
			return this;
		}
	}

	
}
